@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=League+Spartan:wght@100..900&display=swap');

:root, :root[data-theme='dark'] {
    --primary-color: #F0F0F0;  /* cor de texto */
    
    --primary-bg-color: #111217;  /* cor de fundo  */
    /* bg = background = plano de fundo */
    --secondary-bg-color: #28292E;
    --primary-border-color: #28292E;
    --secundary-border-color: #56575A;

    --title-color: #F0f0f0;
    --text-color: #9a9a9c;
    --link-color: #9a9a9c;
    --icon-color: #c7c8c9;

}

:root [data-theme='light'] {
    --primary-color: #0B0B0F;
    --primary-bg-color: #E9E9E9;
    --secondary-bg-color: #C7c8c9;
    --primary-border-color:  #C7c8c9;
    --secondary-border-color: #9a9a9c;

    --title-color: #0b0b0f;
    --text-color: #28292e;
    --link-color: #28292e;
    --icon-color: #56575a;
}
/*
definindo variáveis de cores para um tema claro e um tema escuro

ROOT refere-se ao elemento raiz do documento HTML

seletor :root define as variáveis globais

Isso oferece uma maneira flexível de definir valores
que podem ser reutilizados em todo o seu CSS e facilmente atualizados de um único lugar.
*/

html [data-theme='light'] .brand-logo {
    filter:invert(1);
}
html [data-theme='light'] .tecnologias-logo {
    filter: invert(80%);
}
/*  (*) reset do CSS */
* {
   margin: 0px;  /* margem */
   padding: 0px;  /* preenchimento // espaçamento */ 
   box-sizing: border-box;
    /* 
    A propriedade box-sizing em CSS é usada para alterar o modelo de caixa de um elemento.
    O valor border-box é usado para garantir que a largura e a altura de um elemento
    incluam as bordas e o preenchimento, em vez de apenas o conteúdo.
    Quando você define box-sizing: border-box;, está dizendo ao navegador
    para calcular a largura e a altura total de um elemento,
    incluindo a largura das bordas e o preenchimento, e não apenas o conteúdo.
    */
   

   /* vertical-align: baseline; */
   list-style: none;
   scrollbar-width: thin;
   scrollbar-color: var(--secondary-bg-color) transparent;
}
body {
    background: var(--primary-bg-color);
    font-family: 'Inter', Tahoma, Geneva, Verdana, sans-serif;
    color: var(--text-color);
}

/* conteudo extra */

#header {
    display: flex;
    flex-flow: row wrap;
    /* Coloca o conteúdo em linha e permite a quebra de linha. */
    justify-content: space-between;
    /* Os itens dentro do container flexível serão distribuídos de maneira uniforme ao longo do eixo principal, com espaços iguais entre eles.  */
    align-items: center;
    width: 100%;
    padding: 0.5rem 1rem;
    z-index: 2;
}

.header-logo .logo {
    width: 3.25rem;
    height: 3.25rem;
}

.header-toggle {
    display: flex;
    justify-content: flex-end;
}
#toggleTheme {
    font-size: 1.5rem;
    color: var(--icon-color);
    cursor: pointer;
    transition: ease-in-out .4s;
}

.menu{
    display: flex;
    /*  Torna o elemento um flex container automaticamente
    transformando todos os seus filhos diretos em flex itens */
    align-items: center;
    background: var(--primary-bg-color);
    gap: 1rem;  /*    */ 
}
.menu-item{
    width: 100%;
}
.menu-link{
    display: flex; 
    /*  Torna o elemento um flex container automaticamente
    transformando todos os seus filhos diretos em flex itens */
    align-items: center;
    gap: .5rem;  
    /* usada para definir o espaço entre os elementos
    criar espaçamento uniforme entre os elementos
    */
}

.menu-mobile {
    width: 100vw;  /* V W = viewport width*/
    position: fixed;
    bottom: 0;
    justify-content: space-between;
    border-top: 1px solid var(--primary-border-color);   
}

.menu-mobile .menu-link {
    flex-direction: column;  
    /* definir a direção principal dos itens em uma coluna vertical */
    justify-content: center;
    padding: 0.5rem 1rem;
}

.menu-link.active .menu-icon,
.menu-link.active .menu-text,
.menu-link:hover .menu-icon,
.menu-link:hover .menu-text { /* a:hover = pseudo-classe  */
    color: var(--primary-color);
}

.menu-icon, .menu-text{
    color: var(--text-color);
}
.menu-icon{
    font-size: 1.5rem;
}